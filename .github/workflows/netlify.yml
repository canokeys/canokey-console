name: Build and Deploy to Netlify

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  FLUTTER_VERSION: 3.29.2

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - uses: actions/cache@v4
      with:
        key: web-spa-rust-${{ hashFiles('rust/Cargo.toml') }}
        path: |
          rust/target
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: nightly
        components: rust-src
        target: wasm32-unknown-unknown
    - name: Setup Flutter SDK
      uses: flutter-actions/setup-flutter@v3
      with:
        channel: stable
        version: ${{ env.FLUTTER_VERSION }}
        cache: true
    - run: flutter pub get
    - name: Build Rust Library
      run: |
        cargo install flutter_rust_bridge_codegen
        flutter_rust_bridge_codegen build-web --release
    - run: flutter build web --verbose
    - uses: actions/upload-artifact@v4
      with:
        name: web-spa
        path: build/web/
  deploy:
    runs-on: ubuntu-24.04
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: web-spa
          path: /tmp/console-build
      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v3
        with:
          publish-dir: /tmp/console-build
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: false
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ vars.NETLIFY_SITE_ID }}
        timeout-minutes: 5
  deploy-edgeone:
    runs-on: ubuntu-24.04
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: web-spa
          path: /tmp/console-build
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install EdgeOne CLI
        run: npm install -g edgeone
      - name: Deploy to EdgeOne
        run: edgeone pages deploy /tmp/console-build -n ${{ vars.EDGEONE_PROJECT_NAME }} -t ${{ secrets.NETLIFY_AUTH_TOKEN }}
        timeout-minutes: 10
